name: Auto Version Update

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip-version]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Get commit count for version
      id: version
      run: |
        # Usar el nÃºmero de commits como versiÃ³n patch
        COMMIT_COUNT=$(git rev-list --count HEAD)
        NEW_VERSION="2.1.$COMMIT_COUNT"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Nueva versiÃ³n calculada: v$NEW_VERSION"

    - name: Update version in files
      run: |
        # Actualizar package.json
        sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${{ steps.version.outputs.version }}\"/g" package.json
        
        # Actualizar index.html
        sed -i "s/<span class=\"version-info\">v[0-9.]*<\/span>/<span class=\"version-info\">v${{ steps.version.outputs.version }}<\/span>/g" index.html
        
        echo "âœ… Archivos actualizados con versiÃ³n v${{ steps.version.outputs.version }}"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "ðŸ”– Auto-update version to v${{ steps.version.outputs.version }}"
        title: "ðŸ”– Auto-update version to v${{ steps.version.outputs.version }}"
        body: |
          This PR updates the version number to v${{ steps.version.outputs.version }} based on the current commit count.
          
          - Updated `package.json` version
          - Updated version display in `index.html`
          
          Auto-generated by GitHub Actions workflow.
        branch: auto-version-update
        delete-branch: true
        labels: |
          automated
          version-update